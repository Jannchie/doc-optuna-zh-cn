# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Optuna Contributors.
# This file is distributed under the same license as the Optuna package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Optuna 2.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-15 09:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/reference/generated/optuna.integration.AllenNLPPruningCallback.rst:2
msgid "optuna.integration.AllenNLPPruningCallback"
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:1
msgid "AllenNLP callback to prune unpromising trials."
msgstr "用于剪枝无望 trial 的 AllenNLP 回调."

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:3
msgid ""
"See `the example <https://github.com/optuna/optuna-examples/tree/main/ "
"allennlp/allennlp_simple.py>`__ if you want to add a pruning callback "
"which observes a metric."
msgstr "如果想添加一个监听评估函数的剪枝回调请参考 `the example <https://github.com/optuna/optuna-examples/tree/main/allennlp/allennlp_simple.py>`__."

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:7
msgid ""
"You can also see the tutorial of our AllenNLP integration on `AllenNLP "
"Guide <https://guide.allennlp.org/hyperparameter-optimization>`_."
msgstr "Guide <https://guide.allennlp.org/hyperparameter-optimization>`_ 上看到我们关于 AllenNLP 集成的教程."

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:11
msgid ""
"When :class:`~optuna.integration.AllenNLPPruningCallback` is instantiated"
" in Python script, trial and monitor are mandatory."
msgstr "当 Python 脚本实例化 :class:`~optuna.integration.AllenNLPPruningCallback` 以后, "
"trial 和 monitor 就是强制的."

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:14
msgid ""
"On the other hand, when "
":class:`~optuna.integration.AllenNLPPruningCallback` is used with "
":class:`~optuna.integration.AllenNLPExecutor`, ``trial`` and ``monitor`` "
"would be :obj:`None`. :class:`~optuna.integration.AllenNLPExecutor` sets "
"environment variables for a study name, trial id, monitor, and storage. "
"Then :class:`~optuna.integration.AllenNLPPruningCallback` loads them to "
"restore ``trial`` and ``monitor``."
msgstr "另一方面, 当 :class:`~optuna.integration.AllenNLPPruningCallback` 和 "
":class:`~optuna.integration.AllenNLPExecutor` 配合使用时, ``trial`` 和 ``monitor`` "
"就是 :obj:`None`. :class:`~optuna.integration.AllenNLPExecutor`  为 study 名, trial id, monitor 和存储设置环境变量. "
"然后 :class:`~optuna.integration.AllenNLPPruningCallback`  将其载入来重置 ``trial`` 和 ``monitor``."

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:22
msgid ""
"Currently, build-in pruners are supported except for "
":class:`~optuna.pruners.PatientPruner`."
msgstr "目前, 除了 :class:`~optuna.pruners.PatientPruner` 之外, 内置 pruner 都是可用的."

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback
#: optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch
#: optuna.integration.allennlp._pruner.TrainerCallback.register
msgid "参数"
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:25
msgid ""
"A :class:`~optuna.trial.Trial` corresponding to the current evaluation of"
" the objective function."
msgstr "一个 :class:`~optuna.trial.Trial` 对应当前目标函数的求值. "

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:27
msgid ""
"An evaluation metric for pruning, e.g. ``validation_loss`` or "
"``validation_accuracy``."
msgstr "用于剪枝的求职评估函数. 例如 ``validation_loss`` 或者 "
"``validation_accuracy``."

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback:31
msgid ""
"Added in v2.0.0 as an experimental feature. The interface may change in "
"newer versions without prior notice. See "
"https://github.com/optuna/optuna/releases/tag/v2.0.0."
msgstr ""
"在 v2.0.0 中作为试验性特性引入. 在未来该接口可能在没有提前提醒的情况下改变. 参见 "
"https://github.com/optuna/optuna/releases/tag/v2.0.0."

#: ../../source/reference/generated/optuna.integration.AllenNLPPruningCallback.rst:12
msgid "Methods"
msgstr ""

#: of
#: optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:1:<autosummary>:1
msgid ""
":obj:`on_epoch <optuna.integration.AllenNLPPruningCallback.on_epoch>`\\ "
"\\(trainer\\, metrics\\, epoch\\[\\, is\\_primary\\]\\)"
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:1
#: optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:1:<autosummary>:1
msgid "Check if a training reaches saturation."
msgstr "检查训练过程是否饱和."

#: of
#: optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:1:<autosummary>:1
msgid ""
":obj:`register <optuna.integration.AllenNLPPruningCallback.register>`\\ "
"\\(\\*args\\, \\*\\*kwargs\\)"
msgstr ""

#: of
#: optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:1:<autosummary>:1
#: optuna.integration.allennlp._pruner.TrainerCallback.register:1
msgid "Stub method for `TrainerCallback.register`."
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:3
msgid "AllenNLP's trainer"
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:4
msgid "Dictionary of metrics."
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:5
msgid "Number of current epoch."
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch:6
msgid "A flag for AllenNLP internal."
msgstr ""

#: of optuna.integration.allennlp._pruner.AllenNLPPruningCallback.on_epoch
#: optuna.integration.allennlp._pruner.TrainerCallback.register
msgid "返回类型"
msgstr ""

#: of optuna.integration.allennlp._pruner.TrainerCallback.register:3
msgid ""
"This method has the same signature as `Registrable.register "
"<https://docs.allennlp.org/master/ api/common/registrable/#registrable>`_"
" in AllenNLP."
msgstr "该方法和 `Registrable.register "
"<https://docs.allennlp.org/master/ api/common/registrable/#registrable>`_ 有一样的签名."

#~ msgid ""
#~ "See `the example "
#~ "<https://github.com/optuna/optuna/blob/master/ "
#~ "examples/allennlp/allennlp_simple.py>`__ if you want"
#~ " to add a proning callback which "
#~ "observes a metric."
#~ msgstr ""

#~ msgid "Stub method for `EpochCallback.register`."
#~ msgstr ""

#~ msgid ""
#~ "See `the example "
#~ "<https://github.com/optuna/optuna/blob/master/ "
#~ "examples/allennlp/allennlp_simple.py>`__ if you want"
#~ " to add a pruning callback which "
#~ "observes a metric."
#~ msgstr ""

#~ msgid ""
#~ "On the other hand, when "
#~ ":class:`~optuna.integration.AllenNLPPruningCallback` is "
#~ "used with :class:`~optuna.integration.AllenNLPExecutor`,"
#~ " ``trial`` and ``monitor`` would be "
#~ "``None``. :class:`~optuna.integration.AllenNLPExecutor` "
#~ "sets environment variables for a study"
#~ " name, trial id, monitor, and "
#~ "storage. Then "
#~ ":class:`~optuna.integration.AllenNLPPruningCallback` loads "
#~ "them to restore ``trial`` and "
#~ "``monitor``."
#~ msgstr ""

