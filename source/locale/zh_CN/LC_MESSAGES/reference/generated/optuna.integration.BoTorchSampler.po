# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Optuna Contributors.
# This file is distributed under the same license as the Optuna package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Optuna 2.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-14 18:04-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/reference/generated/optuna.integration.BoTorchSampler.rst:2
msgid "optuna.integration.BoTorchSampler"
msgstr ""

#: of optuna.integration.BoTorchSampler:1
msgid ""
"A sampler that uses BoTorch, a Bayesian optimization library built on top"
" of PyTorch."
msgstr ""

#: of optuna.integration.BoTorchSampler:3
msgid ""
"This sampler allows using BoTorch's optimization algorithms from Optuna "
"to suggest parameter configurations. Parameters are transformed to "
"continuous space and passed to BoTorch, and then transformed back to "
"Optuna's representations. Categorical parameters are one-hot encoded."
msgstr ""

#: of optuna.integration.BoTorchSampler:8
msgid ""
"See an `example <https://github.com/optuna/optuna/blob/master/examples/ "
"botorch_simple.py>`_ how to use the sampler."
msgstr ""

#: of optuna.integration.BoTorchSampler:12
msgid ""
"See the `BoTorch <https://botorch.org/>`_ homepage for details and for "
"how to implement your own ``candidates_func``."
msgstr ""

#: of optuna.integration.BoTorchSampler:16
msgid ""
"An instance of this sampler *should be not used with different studies* "
"when used with constraints. Instead, a new instance should be created for"
" each new study. The reason for this is that the sampler is stateful "
"keeping all the computed constraints."
msgstr ""

#: of optuna.integration.BoTorchSampler
#: optuna.integration.BoTorchSampler.after_trial
#: optuna.integration.BoTorchSampler.infer_relative_search_space
#: optuna.integration.BoTorchSampler.sample_independent
#: optuna.integration.BoTorchSampler.sample_relative
msgid "参数"
msgstr ""

#: of optuna.integration.BoTorchSampler:20
msgid ""
"An optional function that suggests the next candidates. It must take the "
"training data, the objectives, the constraints, the search space bounds "
"and return the next candidates. The arguments are of type "
"``torch.Tensor``. The return value must be a ``torch.Tensor``. However, "
"if ``constraints_func`` is omitted, constraints will be :obj:`None`. For "
"any constraints that failed to compute, the tensor will contain NaN.  If "
"omitted, is determined automatically based on the number of objectives. "
"If the number of objectives is one, Quasi MC-based batch Expected "
"Improvement (qEI) is used. If the number of objectives is larger than one"
" but smaller than four, Quasi MC-based batch Expected Hypervolume "
"Improvement (qEHVI) is used. Otherwise, for larger number of objectives, "
"the faster Quasi MC-based extended ParEGO (qParEGO) is used.  The "
"function should assume *maximization* of the objective.  .. seealso::"
"     See :func:`optuna.integration.botorch.qei_candidates_func` for an "
"example."
msgstr ""

#: of optuna.integration.BoTorchSampler:20
msgid ""
"An optional function that suggests the next candidates. It must take the "
"training data, the objectives, the constraints, the search space bounds "
"and return the next candidates. The arguments are of type "
"``torch.Tensor``. The return value must be a ``torch.Tensor``. However, "
"if ``constraints_func`` is omitted, constraints will be :obj:`None`. For "
"any constraints that failed to compute, the tensor will contain NaN."
msgstr ""

#: of optuna.integration.BoTorchSampler:27
msgid ""
"If omitted, is determined automatically based on the number of "
"objectives. If the number of objectives is one, Quasi MC-based batch "
"Expected Improvement (qEI) is used. If the number of objectives is larger"
" than one but smaller than four, Quasi MC-based batch Expected "
"Hypervolume Improvement (qEHVI) is used. Otherwise, for larger number of "
"objectives, the faster Quasi MC-based extended ParEGO (qParEGO) is used."
msgstr ""

#: of optuna.integration.BoTorchSampler:33
msgid "The function should assume *maximization* of the objective."
msgstr ""

#: of optuna.integration.BoTorchSampler:36
msgid "See :func:`optuna.integration.botorch.qei_candidates_func` for an example."
msgstr ""

#: of optuna.integration.BoTorchSampler:37
msgid ""
"An optional function that computes the objective constraints. It must "
"take a :class:`~optuna.trial.FrozenTrial` and return the constraints. The"
" return value must be a sequence of :obj:`float` s. A value strictly "
"larger than 0 means that a constraints is violated. A value equal to or "
"smaller than 0 is considered feasible.  If omitted, no constraints will "
"be passed to ``candidates_func`` nor taken into account during suggestion"
" if ``candidates_func`` is omitted."
msgstr ""

#: of optuna.integration.BoTorchSampler:37
msgid ""
"An optional function that computes the objective constraints. It must "
"take a :class:`~optuna.trial.FrozenTrial` and return the constraints. The"
" return value must be a sequence of :obj:`float` s. A value strictly "
"larger than 0 means that a constraints is violated. A value equal to or "
"smaller than 0 is considered feasible."
msgstr ""

#: of optuna.integration.BoTorchSampler:42
msgid ""
"If omitted, no constraints will be passed to ``candidates_func`` nor "
"taken into account during suggestion if ``candidates_func`` is omitted."
msgstr ""

#: of optuna.integration.BoTorchSampler:44
msgid ""
"Number of initial trials, that is the number of trials to resort to "
"independent sampling."
msgstr ""

#: of optuna.integration.BoTorchSampler:46
msgid ""
"An independent sampler to use for the initial trials and for parameters "
"that are conditional."
msgstr ""

#: of optuna.integration.BoTorchSampler:50
#: optuna.integration.BoTorchSampler.after_trial:7
msgid ""
"Added in v2.4.0 as an experimental feature. The interface may change in "
"newer versions without prior notice. See "
"https://github.com/optuna/optuna/releases/tag/v2.4.0."
msgstr ""

#: ../../source/reference/generated/optuna.integration.BoTorchSampler.rst:12
msgid "Methods"
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
msgid ""
":obj:`after_trial <optuna.integration.BoTorchSampler.after_trial>`\\ "
"\\(study\\, trial\\, state\\, values\\)"
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1
#: optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
msgid "Trial post-processing."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
msgid ""
":obj:`infer_relative_search_space "
"<optuna.integration.BoTorchSampler.infer_relative_search_space>`\\ "
"\\(study\\, trial\\)"
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
#: optuna.integration.BoTorchSampler.infer_relative_search_space:1
msgid ""
"Infer the search space that will be used by relative sampling in the "
"target trial."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
msgid ":obj:`reseed_rng <optuna.integration.BoTorchSampler.reseed_rng>`\\ \\(\\)"
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
#: optuna.integration.BoTorchSampler.reseed_rng:1
msgid "Reseed sampler's random number generator."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
msgid ""
":obj:`sample_independent "
"<optuna.integration.BoTorchSampler.sample_independent>`\\ \\(study\\, "
"trial\\, param\\_name\\, ...\\)"
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
#: optuna.integration.BoTorchSampler.sample_independent:1
msgid "Sample a parameter for a given distribution."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
msgid ""
":obj:`sample_relative "
"<optuna.integration.BoTorchSampler.sample_relative>`\\ \\(study\\, "
"trial\\, search\\_space\\)"
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:1:<autosummary>:1
#: optuna.integration.BoTorchSampler.sample_relative:1
msgid "Sample parameters in a given search space."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:3
msgid ""
"This method is called after the objective function returns and right "
"before the trials is finished and its state is stored."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:10
#: optuna.integration.BoTorchSampler.infer_relative_search_space:8
#: optuna.integration.BoTorchSampler.sample_independent:13
#: optuna.integration.BoTorchSampler.sample_relative:12
msgid "Target study object."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:11
#: optuna.integration.BoTorchSampler.infer_relative_search_space:9
#: optuna.integration.BoTorchSampler.sample_independent:14
#: optuna.integration.BoTorchSampler.sample_relative:13
msgid "Target trial object. Take a copy before modifying this object."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:13
msgid "Resulting trial state."
msgstr ""

#: of optuna.integration.BoTorchSampler.after_trial:14
msgid ""
"Resulting trial values. Guaranteed to not be :obj:`None` if trial "
"succeeded."
msgstr ""

#: of optuna.integration.BoTorchSampler.infer_relative_search_space:3
msgid ""
"This method is called right before "
":func:`~optuna.samplers.BaseSampler.sample_relative` method, and the "
"search space returned by this method is pass to it. The parameters not "
"contained in the search space will be sampled by using "
":func:`~optuna.samplers.BaseSampler.sample_independent` method."
msgstr ""

#: of optuna.integration.BoTorchSampler.infer_relative_search_space
#: optuna.integration.BoTorchSampler.sample_independent
#: optuna.integration.BoTorchSampler.sample_relative
msgid "返回"
msgstr ""

#: of optuna.integration.BoTorchSampler.infer_relative_search_space:12
msgid "A dictionary containing the parameter names and parameter's distributions."
msgstr ""

#: of optuna.integration.BoTorchSampler.infer_relative_search_space:15
msgid ""
"Please refer to :func:`~optuna.samplers.intersection_search_space` as an "
"implementation of "
":func:`~optuna.samplers.BaseSampler.infer_relative_search_space`."
msgstr ""

#: of optuna.integration.BoTorchSampler.reseed_rng:3
msgid ""
"This method is called by the :class:`~optuna.study.Study` instance if "
"trials are executed in parallel with the option ``n_jobs>1``. In that "
"case, the sampler instance will be replicated including the state of the "
"random number generator, and they may suggest the same values. To prevent"
" this issue, this method assigns a different seed to each random number "
"generator."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_independent:3
msgid ""
"This method is called only for the parameters not contained in the search"
" space returned by :func:`~optuna.samplers.BaseSampler.sample_relative` "
"method. This method is suitable for sampling algorithms that do not use "
"relationship between parameters such as random sampling and TPE."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_independent:9
#: optuna.integration.BoTorchSampler.sample_relative:8
msgid ""
"The failed trials are ignored by any build-in samplers when they sample "
"new parameters. Thus, failed trials are regarded as deleted in the "
"samplers' perspective."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_independent:16
msgid "Name of the sampled parameter."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_independent:17
msgid ""
"Distribution object that specifies a prior and/or scale of the sampling "
"algorithm."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_independent:19
msgid "A parameter value."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_relative:3
msgid ""
"This method is called once at the beginning of each trial, i.e., right "
"before the evaluation of the objective function. This method is suitable "
"for sampling algorithms that use relationship between parameters such as "
"Gaussian Process and CMA-ES."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_relative:15
msgid ""
"The search space returned by "
":func:`~optuna.samplers.BaseSampler.infer_relative_search_space`."
msgstr ""

#: of optuna.integration.BoTorchSampler.sample_relative:18
msgid "A dictionary containing the parameter names and the values."
msgstr ""

