# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Optuna Contributors.
# This file is distributed under the same license as the Optuna package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Optuna 2.4.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-15 09:48+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/reference/generated/optuna.integration.ChainerMNStudy.rst:2
msgid "optuna.integration.ChainerMNStudy"
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy:1
msgid ""
"A wrapper of :class:`~optuna.study.Study` to incorporate Optuna with "
"ChainerMN."
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy:4
msgid ""
":class:`~optuna.integration.chainermn.ChainerMNStudy` provides the same "
"interface as :class:`~optuna.study.Study`. Please refer to "
":class:`optuna.study.Study` for further details."
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy:8
msgid ""
"See `the example <https://github.com/optuna/optuna-examples/blob/main/ "
"chainer/chainermn_integration.py>`__ if you want to optimize an objective"
" function that trains neural network written with ChainerMN."
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy
#: optuna.integration.chainermn.ChainerMNStudy.optimize
msgid "参数"
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy:13
msgid "A :class:`~optuna.study.Study` object."
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy:14
msgid ""
"A `ChainerMN communicator "
"<https://docs.chainer.org/en/stable/chainermn/reference/ "
"index.html#communicators>`_."
msgstr ""

#: ../../source/reference/generated/optuna.integration.ChainerMNStudy.rst:12
msgid "Methods"
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy.optimize:1:<autosummary>:1
msgid ""
":obj:`optimize <optuna.integration.ChainerMNStudy.optimize>`\\ "
"\\(func\\[\\, n\\_trials\\, timeout\\, catch\\]\\)"
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy.optimize:1
#: optuna.integration.chainermn.ChainerMNStudy.optimize:1:<autosummary>:1
msgid "Optimize an objective function."
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy.optimize:3
msgid ""
"This method provides the same interface as "
":func:`optuna.study.Study.optimize` except the absence of ``n_jobs`` "
"argument."
msgstr ""

#: of optuna.integration.chainermn.ChainerMNStudy.optimize
msgid "返回类型"
msgstr ""

#~ msgid ""
#~ "See `the example "
#~ "<https://github.com/optuna/optuna/blob/master/ "
#~ "examples/pruning/chainermn_integration.py>`__ if you "
#~ "want to optimize an objective function"
#~ " that trains neural network written "
#~ "with ChainerMN."
#~ msgstr ""

#~ msgid ""
#~ "See `the example "
#~ "<https://github.com/optuna/optuna/blob/master/ "
#~ "examples/chainer/chainermn_integration.py>`__ if you "
#~ "want to optimize an objective function"
#~ " that trains neural network written "
#~ "with ChainerMN."
#~ msgstr ""

